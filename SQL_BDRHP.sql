-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.paciente
(
    cpf integer NOT NULL DEFAULT nextval('paciente_id_paciente_seq'::regclass),
    nome character varying(255) COLLATE pg_catalog."default" NOT NULL,
    data_nascimento date,
    endereco character varying(255) COLLATE pg_catalog."default",
    cep character varying(20) COLLATE pg_catalog."default",
    nome_mae character varying(255) COLLATE pg_catalog."default",
    id_leito integer,
    CONSTRAINT paciente_pkey PRIMARY KEY (cpf)
);

CREATE TABLE IF NOT EXISTS public.leito
(
    id_leito serial NOT NULL,
    id_unidade integer NOT NULL,
    unidade_internacao character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT leito_pkey PRIMARY KEY (id_leito)
);

CREATE TABLE IF NOT EXISTS public.unidade
(
    id_unidade serial NOT NULL,
    nome_unidade character varying(255) COLLATE pg_catalog."default" NOT NULL,
    descricao_unid character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT unidade_pkey PRIMARY KEY (id_unidade)
);

CREATE TABLE IF NOT EXISTS public.transferencia
(
    id_transferencia serial NOT NULL,
    cpf integer,
    codigo_leito_origem integer,
    codigo_leito_destino integer,
    datahora_transferencia timestamp without time zone,
    CONSTRAINT transferencia_pkey PRIMARY KEY (id_transferencia)
);

CREATE TABLE IF NOT EXISTS public.atendimento
(
    id_atendimento serial NOT NULL,
    data_hora timestamp without time zone,
    tipo character varying(100) COLLATE pg_catalog."default",
    origem character varying(100) COLLATE pg_catalog."default",
    convenio character varying(100) COLLATE pg_catalog."default",
    id_paciente integer,
    id_profissional integer,
    CONSTRAINT atendimento_pkey PRIMARY KEY (id_atendimento)
);

CREATE TABLE IF NOT EXISTS public.profissional
(
    id_profissional serial NOT NULL,
    nome character varying(255) COLLATE pg_catalog."default",
    setor character varying(255) COLLATE pg_catalog."default",
    funcao character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT profissional_pkey PRIMARY KEY (id_profissional)
);

CREATE TABLE IF NOT EXISTS public.alta
(
    id_alta serial NOT NULL,
    data_hora_alta timestamp without time zone,
    motivo_alta character varying(255) COLLATE pg_catalog."default",
    cpf integer,
    CONSTRAINT alta_pkey PRIMARY KEY (id_alta)
);

ALTER TABLE IF EXISTS public.paciente
    ADD CONSTRAINT paciente_id_leito_fkey FOREIGN KEY (id_leito)
    REFERENCES public.leito (id_leito) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.leito
    ADD CONSTRAINT leito_id_unidade_fkey FOREIGN KEY (id_unidade)
    REFERENCES public.unidade (id_unidade) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transferencia
    ADD CONSTRAINT transferencia_codigo_leito_destino_fkey FOREIGN KEY (codigo_leito_destino)
    REFERENCES public.leito (id_leito) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transferencia
    ADD CONSTRAINT transferencia_codigo_leito_origem_fkey FOREIGN KEY (codigo_leito_origem)
    REFERENCES public.leito (id_leito) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.transferencia
    ADD CONSTRAINT transferencia_cpf_fkey FOREIGN KEY (cpf)
    REFERENCES public.paciente (cpf) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.atendimento
    ADD CONSTRAINT atendimento_id_paciente_fkey FOREIGN KEY (id_paciente)
    REFERENCES public.paciente (cpf) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.atendimento
    ADD CONSTRAINT atendimento_id_profissional_fkey FOREIGN KEY (id_profissional)
    REFERENCES public.profissional (id_profissional) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.alta
    ADD CONSTRAINT alta_cpf_fkey FOREIGN KEY (cpf)
    REFERENCES public.paciente (cpf) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;